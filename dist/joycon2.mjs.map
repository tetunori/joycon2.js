{"version":3,"file":"joycon2.mjs","sources":["../lib/src/joycon2.ts"],"sourcesContent":["/// <reference lib=\"dom\" />\n\n// WebBluetooth BLE Peripheral + JoyCon2 wrapper\n// The library exposes a Joycon2 class (default export) which handles BLE\n// connect/disconnect and parses incoming JoyCon2 packets into a `gJoyCon2Data`\n// object that matches the shape used by the sample app.\n\nexport interface SimpleParsedJoyCon2Data {\n  packetId: number;\n  buttons: number;\n  leftStick: number;\n  rightStick: number;\n  mouseX: number;\n  mouseY: number;\n  mouseUnknown: number;\n  mouseDistance: number;\n  magX: number;\n  magY: number;\n  magZ: number;\n  batteryVoltage: number;\n  batteryCurrent: number;\n  temperature: number;\n  accelX: number;\n  accelY: number;\n  accelZ: number;\n  gyroX: number;\n  gyroY: number;\n  gyroZ: number;\n  triggerL: number;\n  triggerR: number;\n}\n\nexport interface JoyCon2Data {\n  packetId: number;\n  buttonL: boolean;\n  buttonR: boolean;\n  buttonMinus: boolean;\n  buttonPlus: boolean;\n  buttonLStick: boolean;\n  buttonRStick: boolean;\n  buttonA: boolean;\n  buttonB: boolean;\n  buttonC: boolean;\n  buttonX: boolean;\n  buttonY: boolean;\n  buttonUp: boolean;\n  buttonDown: boolean;\n  buttonLeft: boolean;\n  buttonRight: boolean;\n  buttonCapture: boolean;\n  buttonHome: boolean;\n  buttonZR: boolean;\n  buttonZL: boolean;\n  buttonSR_R: boolean;\n  buttonSL_R: boolean;\n  buttonSR_L: boolean;\n  buttonSL_L: boolean;\n  leftStickX: number;\n  leftStickY: number;\n  rightStickX: number;\n  rightStickY: number;\n  mouseX: number;\n  mouseY: number;\n  mouseUnknown: number;\n  mouseDistance: number;\n  magX: number;\n  magY: number;\n  magZ: number;\n  batteryVoltage: number;\n  batteryCurrent: number;\n  temperature: number;\n  accelX: number;\n  accelY: number;\n  accelZ: number;\n  gyroX: number;\n  gyroY: number;\n  gyroZ: number;\n  triggerL: number;\n  triggerR: number;\n  simpleParsed: SimpleParsedJoyCon2Data;\n  rawData: Uint8Array;\n}\n\nconst DEFAULT_DATA: JoyCon2Data = {\n  packetId: 0,\n  buttonL: false,\n  buttonR: false,\n  buttonMinus: false,\n  buttonPlus: false,\n  buttonLStick: false,\n  buttonRStick: false,\n  buttonA: false,\n  buttonB: false,\n  buttonC: false,\n  buttonX: false,\n  buttonY: false,\n  buttonUp: false,\n  buttonDown: false,\n  buttonLeft: false,\n  buttonRight: false,\n  buttonCapture: false,\n  buttonHome: false,\n  buttonZR: false,\n  buttonZL: false,\n  buttonSR_R: false,\n  buttonSL_R: false,\n  buttonSR_L: false,\n  buttonSL_L: false,\n  leftStickX: 0,\n  leftStickY: 0,\n  rightStickX: 0,\n  rightStickY: 0,\n  mouseX: 0,\n  mouseY: 0,\n  mouseUnknown: 0,\n  mouseDistance: 0,\n  magX: 0,\n  magY: 0,\n  magZ: 0,\n  batteryVoltage: 0,\n  batteryCurrent: 0,\n  temperature: 0,\n  accelX: 0,\n  accelY: 0,\n  accelZ: 0,\n  gyroX: 0,\n  gyroY: 0,\n  gyroZ: 0,\n  triggerL: 0,\n  triggerR: 0,\n  simpleParsed: {\n    packetId: 0,\n    buttons: 0,\n    leftStick: 0,\n    rightStick: 0,\n    mouseX: 0,\n    mouseY: 0,\n    mouseUnknown: 0,\n    mouseDistance: 0,\n    magX: 0,\n    magY: 0,\n    magZ: 0,\n    batteryVoltage: 0,\n    batteryCurrent: 0,\n    temperature: 0,\n    accelX: 0,\n    accelY: 0,\n    accelZ: 0,\n    gyroX: 0,\n    gyroY: 0,\n    gyroZ: 0,\n    triggerL: 0,\n    triggerR: 0,\n  },\n  rawData: new Uint8Array(),\n};\n\n// Service/Characteristic UUIDs used by the example\nexport const SERVICE_UUID = \"ab7de9be-89fe-49ad-828f-118f09df7fd0\";\nexport const CHARACTERISTICS_UUID = \"ab7de9be-89fe-49ad-828f-118f09df7fd2\";\n\nfunction readUint24LE(dv: DataView, offset: number): number {\n  const b0 = dv.getUint8(offset);\n  const b1 = dv.getUint8(offset + 1);\n  const b2 = dv.getUint8(offset + 2);\n  return (b2 << 16) | (b1 << 8) | b0;\n}\n\n// Stick normalization helpers (same logic used in the example app)\nconst centerX = 2000, minX = 1000, maxX = 3000;\nconst centerY = 2000, minY = 1000, maxY = 3000;\nfunction normalizeStick(value: number, center: number, min: number, max: number): number {\n  if (value > center) {\n    const norm = (value - center) / (max - center);\n    return Math.min(norm, 1);\n  } else {\n    const norm = (value - center) / (center - min);\n    return Math.max(norm, -1);\n  }\n}\nfunction clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\nfunction round2(value: number): number {\n  return Math.round(value * 100) / 100;\n}\nfunction applyDeadzone(x: number, y: number, deadzone: number = 0.15): [number, number] {\n  const magnitude = Math.sqrt(x * x + y * y);\n  if (magnitude < deadzone) return [0, 0];\n  const scale = (magnitude - deadzone) / (1 - deadzone);\n  let normX = (x / magnitude) * scale;\n  let normY = (y / magnitude) * scale;\n  normX = clamp(round2(normX), -1, 1);\n  normY = clamp(round2(normY), -1, 1);\n  return [normX, normY];\n}\nfunction getStick(rawX: number, rawY: number): [number, number] {\n  let x = normalizeStick(rawX, centerX, minX, maxX);\n  let y = normalizeStick(rawY, centerY, minY, maxY);\n  return applyDeadzone(x, y, 0.15);\n}\n\nexport class JoyCon2Device extends EventTarget {\n  public data: JoyCon2Data = { ...DEFAULT_DATA };\n  // Use `any` for internal Bluetooth types so declaration build doesn't require\n  // the consumer to have WebBluetooth lib types installed.\n  private device: any | null = null;\n  private server: any | null = null;\n  private characteristic: any | null = null;\n\n  constructor() {\n    super();\n  }\n\n  async connect(): Promise<void> {\n    try {\n      const device = await (navigator as any).bluetooth.requestDevice({\n        filters: [\n          {\n            manufacturerData: [\n              {\n                companyIdentifier: 1363, // 0x0553\n                dataPrefix: new Uint8Array([0, 0, 0, 0, 0, 103, 32]),\n                mask: new Uint8Array([0, 0, 0, 0, 0, 0, 255]),\n              },\n            ],\n          },\n        ],\n        optionalServices: [SERVICE_UUID],\n      });\n      this.device = device;\n      this.server = await device.gatt?.connect() ?? null;\n      if (!this.server) throw new Error('GATT server not available');\n      const service = await this.server.getPrimaryService(SERVICE_UUID);\n      this.characteristic = await service.getCharacteristic(CHARACTERISTICS_UUID);\n      await this.characteristic.startNotifications();\n      this.characteristic.addEventListener('characteristicvaluechanged', (ev: Event) => {\n        const char = (ev.target as any) as { value?: DataView };\n        const dv = char.value! as DataView;\n        this.handleData(dv);\n      });\n      this.dispatchEvent(new CustomEvent('connected'));\n    } catch (err) {\n      this.dispatchEvent(new CustomEvent('error', { detail: err }));\n      throw err;\n    }\n  }\n\n  disconnect(): void {\n    if (this.device && this.device.gatt && this.device.gatt.connected) {\n      this.device.gatt.disconnect();\n    }\n    this.device = null;\n    this.server = null;\n    this.characteristic = null;\n    this.dispatchEvent(new CustomEvent('disconnected'));\n  }\n\n  onUpdate(cb: (data: JoyCon2Data) => void) {\n    this.addEventListener('update', () => cb(this.data));\n  }\n\n  private handleData(dv: DataView) {\n    this.data.rawData = new Uint8Array(dv.buffer);\n    this.data.simpleParsed = {\n      packetId: dv.getUint32(0x00, true),\n      buttons: dv.getUint32(0x04, true),\n      leftStick: readUint24LE(dv, 0x0A),\n      rightStick: readUint24LE(dv, 0x0D),\n      mouseX: dv.getInt16(0x10, true),\n      mouseY: dv.getInt16(0x12, true),\n      mouseUnknown: dv.getInt16(0x14, true),\n      mouseDistance: dv.getInt16(0x16, true),\n      magX: dv.getInt16(0x18, true),\n      magY: dv.getInt16(0x1A, true),\n      magZ: dv.getInt16(0x1C, true),\n      batteryVoltage: dv.getUint16(0x1F, true),\n      batteryCurrent: dv.getInt16(0x28, true),\n      temperature: dv.getInt16(0x2E, true),\n      accelX: dv.getInt16(0x30, true),\n      accelY: dv.getInt16(0x32, true),\n      accelZ: dv.getInt16(0x34, true),\n      gyroX: dv.getInt16(0x36, true),\n      gyroY: dv.getInt16(0x38, true),\n      gyroZ: dv.getInt16(0x3A, true),\n      triggerL: dv.getUint8(0x3C),\n      triggerR: dv.getUint8(0x3D),\n    };\n\n    // detailed parsed\n    this.data.packetId = this.data.simpleParsed.packetId;\n    this.data.buttonY = (this.data.simpleParsed.buttons & (1 << 0)) !== 0;\n    this.data.buttonX = (this.data.simpleParsed.buttons & (1 << 1)) !== 0;\n    this.data.buttonB = (this.data.simpleParsed.buttons & (1 << 2)) !== 0;\n    this.data.buttonA = (this.data.simpleParsed.buttons & (1 << 3)) !== 0;\n    this.data.buttonSR_R = (this.data.simpleParsed.buttons & (1 << 4)) !== 0;\n    this.data.buttonSL_R = (this.data.simpleParsed.buttons & (1 << 5)) !== 0;\n    this.data.buttonR = (this.data.simpleParsed.buttons & (1 << 6)) !== 0;\n    this.data.buttonZR = (this.data.simpleParsed.buttons & (1 << 7)) !== 0;\n    this.data.buttonMinus = (this.data.simpleParsed.buttons & (1 << 8)) !== 0;\n    this.data.buttonPlus = (this.data.simpleParsed.buttons & (1 << 9)) !== 0;\n    this.data.buttonRStick = (this.data.simpleParsed.buttons & (1 << 10)) !== 0;\n    this.data.buttonLStick = (this.data.simpleParsed.buttons & (1 << 11)) !== 0;\n    this.data.buttonHome = (this.data.simpleParsed.buttons & (1 << 12)) !== 0;\n    this.data.buttonCapture = (this.data.simpleParsed.buttons & (1 << 13)) !== 0;\n    this.data.buttonC = (this.data.simpleParsed.buttons & (1 << 14)) !== 0;\n    this.data.buttonDown = (this.data.simpleParsed.buttons & (1 << 16)) !== 0;\n    this.data.buttonUp = (this.data.simpleParsed.buttons & (1 << 17)) !== 0;\n    this.data.buttonRight = (this.data.simpleParsed.buttons & (1 << 18)) !== 0;\n    this.data.buttonLeft = (this.data.simpleParsed.buttons & (1 << 19)) !== 0;\n    this.data.buttonSR_L = (this.data.simpleParsed.buttons & (1 << 20)) !== 0;\n    this.data.buttonSL_L = (this.data.simpleParsed.buttons & (1 << 21)) !== 0;\n    this.data.buttonL = (this.data.simpleParsed.buttons & (1 << 22)) !== 0;\n    this.data.buttonZL = (this.data.simpleParsed.buttons & (1 << 23)) !== 0;\n    this.data.leftStickY = (this.data.simpleParsed.leftStick >> 12) & 0xfff;\n    this.data.leftStickX = this.data.simpleParsed.leftStick & 0xfff;\n    this.data.rightStickY = (this.data.simpleParsed.rightStick >> 12) & 0xfff;\n    this.data.rightStickX = this.data.simpleParsed.rightStick & 0xfff;\n    this.data.mouseX = this.data.simpleParsed.mouseX;\n    this.data.mouseY = this.data.simpleParsed.mouseY;\n    this.data.mouseUnknown = this.data.simpleParsed.mouseUnknown;\n    this.data.mouseDistance = this.data.simpleParsed.mouseDistance;\n    this.data.magX = this.data.simpleParsed.magX;\n    this.data.magY = this.data.simpleParsed.magY;\n    this.data.magZ = this.data.simpleParsed.magZ;\n    this.data.batteryVoltage = this.data.simpleParsed.batteryVoltage;\n    this.data.batteryCurrent = this.data.simpleParsed.batteryCurrent / 100.0;\n    this.data.temperature = 25.0 + this.data.simpleParsed.temperature / 127.0;\n    this.data.accelX = this.data.simpleParsed.accelX / 4096.0;\n    this.data.accelY = this.data.simpleParsed.accelY / 4096.0;\n    this.data.accelZ = this.data.simpleParsed.accelZ / 4096.0;\n    this.data.gyroX = (this.data.simpleParsed.gyroX / 48000.0) * 360.0;\n    this.data.gyroY = (this.data.simpleParsed.gyroY / 48000.0) * 360.0;\n    this.data.gyroZ = (this.data.simpleParsed.gyroZ / 48000.0) * 360.0;\n    this.data.triggerL = this.data.simpleParsed.triggerL;\n    this.data.triggerR = this.data.simpleParsed.triggerR;\n\n    [this.data.rightStickX, this.data.rightStickY] = getStick(this.data.rightStickX, this.data.rightStickY);\n    [this.data.leftStickX, this.data.leftStickY] = getStick(this.data.leftStickX, this.data.leftStickY);\n\n    this.dispatchEvent(new CustomEvent('update', { detail: this.data }));\n  }\n}\n\n// default export requested by the user: Joycon2 class which wraps JoyCon2Device\nexport class JoyCon2 extends EventTarget {\n  private dev: JoyCon2Device;\n  constructor() {\n    super();\n    this.dev = new JoyCon2Device();\n    // re-dispatch device events\n    this.dev.addEventListener('update', (e: Event) => this.dispatchEvent(new CustomEvent('update', { detail: (e as CustomEvent).detail })));\n    this.dev.addEventListener('connected', (e) => this.dispatchEvent(new CustomEvent('connected')));\n    this.dev.addEventListener('disconnected', (e) => this.dispatchEvent(new CustomEvent('disconnected')));\n    this.dev.addEventListener('error', (e) => this.dispatchEvent(new CustomEvent('error', { detail: (e as CustomEvent).detail })));\n  }\n\n  async connect(): Promise<void> {\n    return this.dev.connect();\n  }\n\n  disconnect(): void {\n    return this.dev.disconnect();\n  }\n\n  get gJoyCon2Data(): JoyCon2Data {\n    return this.dev.data;\n  }\n\n  // Convenience boolean getters for common buttons so consumers can read\n  // `jc2.buttonUp` directly (useful for sketches / globals).\n  get buttonUp(): boolean {\n    return !!(this.dev && this.dev.data && this.dev.data.buttonUp);\n  }\n\n  get buttonDown(): boolean {\n    return !!(this.dev && this.dev.data && this.dev.data.buttonDown);\n  }\n\n  get buttonLeft(): boolean {\n    return !!(this.dev && this.dev.data && this.dev.data.buttonLeft);\n  }\n\n  get buttonRight(): boolean {\n    return !!(this.dev && this.dev.data && this.dev.data.buttonRight);\n  }\n\n  onUpdate(cb: (data: JoyCon2Data) => void) {\n    this.addEventListener('update', () => cb(this.gJoyCon2Data));\n  }\n}\n\n// no default export: package exposes named exports only (Joycon2, JoyCon2Device, etc.)\n\n// --- UMD向けブリッジ（グローバル登録） ---\ntry {\n  (window as any).JoyCon2 = JoyCon2;\n  (window as any).Joycon2 = JoyCon2;\n  console.log('joycon2: JoyCon2 constructor installed on window');\n} catch (e) {\n  // Nodeなどwindowが無い環境ではスルー\n}\n"],"names":["DEFAULT_DATA","SERVICE_UUID","CHARACTERISTICS_UUID","readUint24LE","dv","offset","b0","b1","centerX","minX","maxX","centerY","minY","maxY","normalizeStick","value","center","min","max","norm","clamp","round2","applyDeadzone","x","y","deadzone","magnitude","scale","normX","normY","getStick","rawX","rawY","JoyCon2Device","device","service","ev","err","cb","JoyCon2","e"],"mappings":"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"}
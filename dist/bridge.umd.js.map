{"version":3,"file":"bridge.umd.js","sources":["../lib/src/bridge.ts"],"sourcesContent":["// Robust bridge for p5 usage: ensure `window.JoyCon2` is a constructor function\r\n// or provide a proxy constructor that queues calls until the real constructor appears.\r\n(() => {\r\n  const PROBE_INTERVAL = 200; // ms\r\n  const PROBE_TIMEOUT = 10_000; // ms\r\n\r\n  function findConstructor() {\r\n    const names = [\r\n      'Joycon2', // common\r\n      'JoyCon2',\r\n    ];\r\n\r\n    for (const name of names) {\r\n      const val = (window as any)[name];\r\n      if (!val) continue;\r\n      if (typeof val === 'function') return val;\r\n      if (typeof val === 'object') {\r\n        // try common property shapes inside a bundle object\r\n        const props = ['Joycon2', 'JoyCon2'];\r\n        for (const p of props) {\r\n          if (typeof (val as any)[p] === 'function') return (val as any)[p];\r\n        }\r\n        // if the object itself exposes named exports (e.g., JoyCon2Device), try to find any function value\r\n        for (const k of Object.keys(val)) {\r\n          try {\r\n            if (typeof (val as any)[k] === 'function') return (val as any)[k];\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Keep a list of proxy instances so we can bind them when real ctor appears\r\n  const proxyInstances = new Set<any>();\r\n\r\n  function createProxyCtor() {\r\n    function ProxyCtor(this: any, ...ctorArgs: any[]) {\r\n      if (!(this instanceof (ProxyCtor as any))) throw new Error('JoyCon2 must be called with new');\r\n      // store ctor args so we can instantiate real instance later\r\n      this.__ctorArgs = ctorArgs;\r\n      this.__real = null;\r\n      this.__queue = [];\r\n\r\n      // enqueue a generic task: {type, args, resolve?, reject?}\r\n      const enqueueTask = (type: string, args: any[], maybeResolve?: any, maybeReject?: any) => {\r\n        const task: any = { type, args };\r\n        if (maybeResolve) {\r\n          task.resolve = maybeResolve;\r\n          task.reject = maybeReject;\r\n        }\r\n        this.__queue.push(task);\r\n        if (type === 'connect' && maybeResolve) {\r\n          // return the promise only for connect\r\n          return new Promise((resolve, reject) => {\r\n            task.resolve = resolve;\r\n            task.reject = reject;\r\n          });\r\n        }\r\n      };\r\n\r\n      // proxy methods\r\n      this.connect = (...args: any[]) => {\r\n        if (this.__real && typeof this.__real.connect === 'function') return this.__real.connect(...args);\r\n        return enqueueTask('connect', args, null, null);\r\n      };\r\n\r\n      this.disconnect = (...args: any[]) => {\r\n        if (this.__real && typeof this.__real.disconnect === 'function') return this.__real.disconnect(...args);\r\n        return enqueueTask('disconnect', args);\r\n      };\r\n\r\n      this.onUpdate = (cb: any) => {\r\n        if (this.__real && typeof this.__real.onUpdate === 'function') return this.__real.onUpdate(cb);\r\n        return enqueueTask('onUpdate', [cb]);\r\n      };\r\n\r\n      Object.defineProperty(this, 'gJoyCon2Data', {\r\n        get: () => (this.__real ? this.__real.gJoyCon2Data : null),\r\n        configurable: true,\r\n      });\r\n\r\n      Object.defineProperty(this, 'buttonUp', {\r\n        get: () => (this.__real ? !!(this.__real.gJoyCon2Data && this.__real.gJoyCon2Data.buttonUp) : false),\r\n        configurable: true,\r\n      });\r\n\r\n      // register for later binding\r\n      proxyInstances.add(this);\r\n    }\r\n\r\n    // keep name for nicer stack traces when possible\r\n    try { Object.defineProperty(ProxyCtor, 'name', { value: 'JoyCon2' }); } catch (e) {}\r\n\r\n    return ProxyCtor as any;\r\n  }\r\n\r\n  function bindRealConstructor(RealCtor: any) {\r\n    if (typeof RealCtor !== 'function') return;\r\n    // set canonical global\r\n    try {\r\n      (window as any).JoyCon2 = RealCtor;\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n\r\n    // bind existing proxy instances\r\n    for (const proxy of Array.from(proxyInstances)) {\r\n      try {\r\n        // instantiate real instance with same ctor args\r\n        const real = new RealCtor(...(proxy.__ctorArgs || []));\r\n        // forward queued operations\r\n        for (const task of proxy.__queue) {\r\n          if (task.type === 'onUpdate') {\r\n            try { real.onUpdate(...(task.args || [])); } catch (e) {}\r\n            continue;\r\n          }\r\n          if (task.type === 'disconnect') {\r\n            try { real.disconnect(...(task.args || [])); } catch (e) {}\r\n            continue;\r\n          }\r\n          if (task.type === 'connect') {\r\n            // if the task has resolve/reject, call connect and resolve/reject accordingly\r\n            if (task.resolve) {\r\n              real.connect(...(task.args || [])).then(task.resolve).catch(task.reject);\r\n            } else {\r\n              // fire-and-forget\r\n              real.connect(...(task.args || [])).catch(()=>{});\r\n            }\r\n            continue;\r\n          }\r\n        }\r\n\r\n        // attach the real instance so getters and direct calls work\r\n        proxy.__real = real;\r\n        // stop forwarding queue for this instance\r\n        proxy.__queue = [];\r\n        proxyInstances.delete(proxy);\r\n      } catch (e) {\r\n        // leave the proxy in place if instantiation fails\r\n        console.warn('joycon bridge: failed to bind proxy instance', e);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Install either direct constructor (if already available) or a proxy\r\n  const RealCtor = findConstructor();\r\n  if (RealCtor) {\r\n    try {\r\n      (window as any).JoyCon2 = RealCtor;\r\n      // also set common lowercase alias to be forgiving\r\n      try { (window as any).Joycon2 = RealCtor; } catch (e) {}\r\n      console.log('joycon bridge: JoyCon2 constructor installed');\r\n      return;\r\n    } catch (e) {\r\n      // fallthrough to proxy\r\n      console.warn('joycon bridge: failed to set JoyCon2 directly', e);\r\n    }\r\n  }\r\n\r\n  // Create proxy constructor so sketches can do `new JoyCon2()` immediately\r\n  const Proxy = createProxyCtor();\r\n  try { (window as any).JoyCon2 = Proxy; } catch (e) {}\r\n  try { (window as any).Joycon2 = Proxy; } catch (e) {}\r\n  console.log('joycon bridge: installed proxy constructor for JoyCon2 (will bind when real lib loads)');\r\n\r\n  // probe for the real constructor and bind when it appears\r\n  const start = Date.now();\r\n  const t = setInterval(() => {\r\n    const ctor = findConstructor();\r\n    if (ctor) {\r\n      clearInterval(t);\r\n      try {\r\n        bindRealConstructor(ctor);\r\n        console.log('joycon bridge: real JoyCon2 constructor found and bound');\r\n      } catch (e) {\r\n        console.warn('joycon bridge: error while binding real constructor', e);\r\n      }\r\n      return;\r\n    }\r\n    if (Date.now() - start > PROBE_TIMEOUT) {\r\n      clearInterval(t);\r\n      console.warn('joycon bridge: timed out waiting for real JoyCon2 constructor');\r\n    }\r\n  }, PROBE_INTERVAL);\r\n\r\n})();\r\n"],"names":["findConstructor","names","name","val","props","p","k","proxyInstances","createProxyCtor","ProxyCtor","ctorArgs","enqueueTask","type","args","maybeResolve","maybeReject","task","resolve","reject","cb","bindRealConstructor","RealCtor","proxy","real","e","Proxy","start","t","ctor"],"mappings":"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"}
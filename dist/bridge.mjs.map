{"version":3,"file":"bridge.mjs","sources":["../lib/src/bridge.ts"],"sourcesContent":["// Robust bridge for p5 usage: ensure `window.JoyCon2` is a constructor function\r\n// or provide a proxy constructor that queues calls until the real constructor appears.\r\n(() => {\r\n  const PROBE_INTERVAL = 200; // ms\r\n  const PROBE_TIMEOUT = 10_000; // ms\r\n\r\n  function findConstructor() {\r\n    const names = [\r\n      'Joycon2', // common\r\n      'JoyCon2',\r\n    ];\r\n\r\n    for (const name of names) {\r\n      const val = (window as any)[name];\r\n      if (!val) continue;\r\n      if (typeof val === 'function') return val;\r\n      if (typeof val === 'object') {\r\n        // try common property shapes inside a bundle object\r\n        const props = ['Joycon2', 'JoyCon2'];\r\n        for (const p of props) {\r\n          if (typeof (val as any)[p] === 'function') return (val as any)[p];\r\n        }\r\n        // if the object itself exposes named exports (e.g., JoyCon2Device), try to find any function value\r\n        for (const k of Object.keys(val)) {\r\n          try {\r\n            if (typeof (val as any)[k] === 'function') return (val as any)[k];\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Keep a list of proxy instances so we can bind them when real ctor appears\r\n  const proxyInstances = new Set<any>();\r\n\r\n  function createProxyCtor() {\r\n    function ProxyCtor(this: any, ...ctorArgs: any[]) {\r\n      if (!(this instanceof (ProxyCtor as any))) throw new Error('JoyCon2 must be called with new');\r\n      // store ctor args so we can instantiate real instance later\r\n      this.__ctorArgs = ctorArgs;\r\n      this.__real = null;\r\n      this.__queue = [];\r\n\r\n      // enqueue a generic task: {type, args, resolve?, reject?}\r\n      const enqueueTask = (type: string, args: any[], maybeResolve?: any, maybeReject?: any) => {\r\n        const task: any = { type, args };\r\n        if (maybeResolve) {\r\n          task.resolve = maybeResolve;\r\n          task.reject = maybeReject;\r\n        }\r\n        this.__queue.push(task);\r\n        if (type === 'connect' && maybeResolve) {\r\n          // return the promise only for connect\r\n          return new Promise((resolve, reject) => {\r\n            task.resolve = resolve;\r\n            task.reject = reject;\r\n          });\r\n        }\r\n      };\r\n\r\n      // proxy methods\r\n      this.connect = (...args: any[]) => {\r\n        if (this.__real && typeof this.__real.connect === 'function') return this.__real.connect(...args);\r\n        return enqueueTask('connect', args, null, null);\r\n      };\r\n\r\n      this.disconnect = (...args: any[]) => {\r\n        if (this.__real && typeof this.__real.disconnect === 'function') return this.__real.disconnect(...args);\r\n        return enqueueTask('disconnect', args);\r\n      };\r\n\r\n      this.onUpdate = (cb: any) => {\r\n        if (this.__real && typeof this.__real.onUpdate === 'function') return this.__real.onUpdate(cb);\r\n        return enqueueTask('onUpdate', [cb]);\r\n      };\r\n\r\n      Object.defineProperty(this, 'gJoyCon2Data', {\r\n        get: () => (this.__real ? this.__real.gJoyCon2Data : null),\r\n        configurable: true,\r\n      });\r\n\r\n      Object.defineProperty(this, 'buttonUp', {\r\n        get: () => (this.__real ? !!(this.__real.gJoyCon2Data && this.__real.gJoyCon2Data.buttonUp) : false),\r\n        configurable: true,\r\n      });\r\n\r\n      // register for later binding\r\n      proxyInstances.add(this);\r\n    }\r\n\r\n    // keep name for nicer stack traces when possible\r\n    try { Object.defineProperty(ProxyCtor, 'name', { value: 'JoyCon2' }); } catch (e) {}\r\n\r\n    return ProxyCtor as any;\r\n  }\r\n\r\n  function bindRealConstructor(RealCtor: any) {\r\n    if (typeof RealCtor !== 'function') return;\r\n    // set canonical global\r\n    try {\r\n      (window as any).JoyCon2 = RealCtor;\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n\r\n    // bind existing proxy instances\r\n    for (const proxy of Array.from(proxyInstances)) {\r\n      try {\r\n        // instantiate real instance with same ctor args\r\n        const real = new RealCtor(...(proxy.__ctorArgs || []));\r\n        // forward queued operations\r\n        for (const task of proxy.__queue) {\r\n          if (task.type === 'onUpdate') {\r\n            try { real.onUpdate(...(task.args || [])); } catch (e) {}\r\n            continue;\r\n          }\r\n          if (task.type === 'disconnect') {\r\n            try { real.disconnect(...(task.args || [])); } catch (e) {}\r\n            continue;\r\n          }\r\n          if (task.type === 'connect') {\r\n            // if the task has resolve/reject, call connect and resolve/reject accordingly\r\n            if (task.resolve) {\r\n              real.connect(...(task.args || [])).then(task.resolve).catch(task.reject);\r\n            } else {\r\n              // fire-and-forget\r\n              real.connect(...(task.args || [])).catch(()=>{});\r\n            }\r\n            continue;\r\n          }\r\n        }\r\n\r\n        // attach the real instance so getters and direct calls work\r\n        proxy.__real = real;\r\n        // stop forwarding queue for this instance\r\n        proxy.__queue = [];\r\n        proxyInstances.delete(proxy);\r\n      } catch (e) {\r\n        // leave the proxy in place if instantiation fails\r\n        console.warn('joycon bridge: failed to bind proxy instance', e);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Install either direct constructor (if already available) or a proxy\r\n  const RealCtor = findConstructor();\r\n  if (RealCtor) {\r\n    try {\r\n      (window as any).JoyCon2 = RealCtor;\r\n      // also set common lowercase alias to be forgiving\r\n      try { (window as any).Joycon2 = RealCtor; } catch (e) {}\r\n      console.log('joycon bridge: JoyCon2 constructor installed');\r\n      return;\r\n    } catch (e) {\r\n      // fallthrough to proxy\r\n      console.warn('joycon bridge: failed to set JoyCon2 directly', e);\r\n    }\r\n  }\r\n\r\n  // Create proxy constructor so sketches can do `new JoyCon2()` immediately\r\n  const Proxy = createProxyCtor();\r\n  try { (window as any).JoyCon2 = Proxy; } catch (e) {}\r\n  try { (window as any).Joycon2 = Proxy; } catch (e) {}\r\n  console.log('joycon bridge: installed proxy constructor for JoyCon2 (will bind when real lib loads)');\r\n\r\n  // probe for the real constructor and bind when it appears\r\n  const start = Date.now();\r\n  const t = setInterval(() => {\r\n    const ctor = findConstructor();\r\n    if (ctor) {\r\n      clearInterval(t);\r\n      try {\r\n        bindRealConstructor(ctor);\r\n        console.log('joycon bridge: real JoyCon2 constructor found and bound');\r\n      } catch (e) {\r\n        console.warn('joycon bridge: error while binding real constructor', e);\r\n      }\r\n      return;\r\n    }\r\n    if (Date.now() - start > PROBE_TIMEOUT) {\r\n      clearInterval(t);\r\n      console.warn('joycon bridge: timed out waiting for real JoyCon2 constructor');\r\n    }\r\n  }, PROBE_INTERVAL);\r\n\r\n})();\r\n"],"names":["findConstructor","names","name","val","props","p","k","proxyInstances","createProxyCtor","ProxyCtor","ctorArgs","enqueueTask","type","args","maybeResolve","maybeReject","task","resolve","reject","cb","bindRealConstructor","RealCtor","proxy","real","e","Proxy","start","t","ctor"],"mappings":"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"}
{"version":3,"file":"index-C8JC8yPI.js","sources":["../../../dist/joycon2.js","../../src/main.ts"],"sourcesContent":["/// <reference lib=\"dom\" />\nconst DEFAULT_DATA = {\n    packetId: 0,\n    buttonL: false,\n    buttonR: false,\n    buttonMinus: false,\n    buttonPlus: false,\n    buttonLStick: false,\n    buttonRStick: false,\n    buttonA: false,\n    buttonB: false,\n    buttonC: false,\n    buttonX: false,\n    buttonY: false,\n    buttonUp: false,\n    buttonDown: false,\n    buttonLeft: false,\n    buttonRight: false,\n    buttonCapture: false,\n    buttonHome: false,\n    buttonZR: false,\n    buttonZL: false,\n    buttonSR_R: false,\n    buttonSL_R: false,\n    buttonSR_L: false,\n    buttonSL_L: false,\n    leftStickX: 0,\n    leftStickY: 0,\n    rightStickX: 0,\n    rightStickY: 0,\n    mouseX: 0,\n    mouseY: 0,\n    mouseUnknown: 0,\n    mouseDistance: 0,\n    magX: 0,\n    magY: 0,\n    magZ: 0,\n    batteryVoltage: 0,\n    batteryCurrent: 0,\n    temperature: 0,\n    accelX: 0,\n    accelY: 0,\n    accelZ: 0,\n    gyroX: 0,\n    gyroY: 0,\n    gyroZ: 0,\n    triggerL: 0,\n    triggerR: 0,\n    simpleParsed: {\n        packetId: 0,\n        buttons: 0,\n        leftStick: 0,\n        rightStick: 0,\n        mouseX: 0,\n        mouseY: 0,\n        mouseUnknown: 0,\n        mouseDistance: 0,\n        magX: 0,\n        magY: 0,\n        magZ: 0,\n        batteryVoltage: 0,\n        batteryCurrent: 0,\n        temperature: 0,\n        accelX: 0,\n        accelY: 0,\n        accelZ: 0,\n        gyroX: 0,\n        gyroY: 0,\n        gyroZ: 0,\n        triggerL: 0,\n        triggerR: 0,\n    },\n    rawData: new Uint8Array(),\n};\n// Service/Characteristic UUIDs used by the example\nexport const SERVICE_UUID = \"ab7de9be-89fe-49ad-828f-118f09df7fd0\";\nexport const CHARACTERISTICS_UUID = \"ab7de9be-89fe-49ad-828f-118f09df7fd2\";\nfunction readUint24LE(dv, offset) {\n    const b0 = dv.getUint8(offset);\n    const b1 = dv.getUint8(offset + 1);\n    const b2 = dv.getUint8(offset + 2);\n    return (b2 << 16) | (b1 << 8) | b0;\n}\n// Stick normalization helpers (same logic used in the example app)\nconst centerX = 2000, minX = 1000, maxX = 3000;\nconst centerY = 2000, minY = 1000, maxY = 3000;\nfunction normalizeStick(value, center, min, max) {\n    if (value > center) {\n        const norm = (value - center) / (max - center);\n        return Math.min(norm, 1);\n    }\n    else {\n        const norm = (value - center) / (center - min);\n        return Math.max(norm, -1);\n    }\n}\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction round2(value) {\n    return Math.round(value * 100) / 100;\n}\nfunction applyDeadzone(x, y, deadzone = 0.15) {\n    const magnitude = Math.sqrt(x * x + y * y);\n    if (magnitude < deadzone)\n        return [0, 0];\n    const scale = (magnitude - deadzone) / (1 - deadzone);\n    let normX = (x / magnitude) * scale;\n    let normY = (y / magnitude) * scale;\n    normX = clamp(round2(normX), -1, 1);\n    normY = clamp(round2(normY), -1, 1);\n    return [normX, normY];\n}\nfunction getStick(rawX, rawY) {\n    let x = normalizeStick(rawX, centerX, minX, maxX);\n    let y = normalizeStick(rawY, centerY, minY, maxY);\n    return applyDeadzone(x, y, 0.15);\n}\nexport class JoyCon2Device extends EventTarget {\n    constructor() {\n        super();\n        this.data = { ...DEFAULT_DATA };\n        // Use `any` for internal Bluetooth types so declaration build doesn't require\n        // the consumer to have WebBluetooth lib types installed.\n        this.device = null;\n        this.server = null;\n        this.characteristic = null;\n    }\n    async connect() {\n        try {\n            const device = await navigator.bluetooth.requestDevice({\n                filters: [\n                    {\n                        manufacturerData: [\n                            {\n                                companyIdentifier: 1363, // 0x0553\n                                dataPrefix: new Uint8Array([0, 0, 0, 0, 0, 103, 32]),\n                                mask: new Uint8Array([0, 0, 0, 0, 0, 0, 255]),\n                            },\n                        ],\n                    },\n                ],\n                optionalServices: [SERVICE_UUID],\n            });\n            this.device = device;\n            this.server = await device.gatt?.connect() ?? null;\n            if (!this.server)\n                throw new Error('GATT server not available');\n            const service = await this.server.getPrimaryService(SERVICE_UUID);\n            this.characteristic = await service.getCharacteristic(CHARACTERISTICS_UUID);\n            await this.characteristic.startNotifications();\n            this.characteristic.addEventListener('characteristicvaluechanged', (ev) => {\n                const char = ev.target;\n                const dv = char.value;\n                this.handleData(dv);\n            });\n            this.dispatchEvent(new CustomEvent('connected'));\n        }\n        catch (err) {\n            this.dispatchEvent(new CustomEvent('error', { detail: err }));\n            throw err;\n        }\n    }\n    disconnect() {\n        if (this.device && this.device.gatt && this.device.gatt.connected) {\n            this.device.gatt.disconnect();\n        }\n        this.device = null;\n        this.server = null;\n        this.characteristic = null;\n        this.dispatchEvent(new CustomEvent('disconnected'));\n    }\n    onUpdate(cb) {\n        this.addEventListener('update', () => cb(this.data));\n    }\n    handleData(dv) {\n        this.data.rawData = new Uint8Array(dv.buffer);\n        this.data.simpleParsed = {\n            packetId: dv.getUint32(0x00, true),\n            buttons: dv.getUint32(0x04, true),\n            leftStick: readUint24LE(dv, 0x0A),\n            rightStick: readUint24LE(dv, 0x0D),\n            mouseX: dv.getInt16(0x10, true),\n            mouseY: dv.getInt16(0x12, true),\n            mouseUnknown: dv.getInt16(0x14, true),\n            mouseDistance: dv.getInt16(0x16, true),\n            magX: dv.getInt16(0x18, true),\n            magY: dv.getInt16(0x1A, true),\n            magZ: dv.getInt16(0x1C, true),\n            batteryVoltage: dv.getUint16(0x1F, true),\n            batteryCurrent: dv.getInt16(0x28, true),\n            temperature: dv.getInt16(0x2E, true),\n            accelX: dv.getInt16(0x30, true),\n            accelY: dv.getInt16(0x32, true),\n            accelZ: dv.getInt16(0x34, true),\n            gyroX: dv.getInt16(0x36, true),\n            gyroY: dv.getInt16(0x38, true),\n            gyroZ: dv.getInt16(0x3A, true),\n            triggerL: dv.getUint8(0x3C),\n            triggerR: dv.getUint8(0x3D),\n        };\n        // detailed parsed\n        this.data.packetId = this.data.simpleParsed.packetId;\n        this.data.buttonY = (this.data.simpleParsed.buttons & (1 << 0)) !== 0;\n        this.data.buttonX = (this.data.simpleParsed.buttons & (1 << 1)) !== 0;\n        this.data.buttonB = (this.data.simpleParsed.buttons & (1 << 2)) !== 0;\n        this.data.buttonA = (this.data.simpleParsed.buttons & (1 << 3)) !== 0;\n        this.data.buttonSR_R = (this.data.simpleParsed.buttons & (1 << 4)) !== 0;\n        this.data.buttonSL_R = (this.data.simpleParsed.buttons & (1 << 5)) !== 0;\n        this.data.buttonR = (this.data.simpleParsed.buttons & (1 << 6)) !== 0;\n        this.data.buttonZR = (this.data.simpleParsed.buttons & (1 << 7)) !== 0;\n        this.data.buttonMinus = (this.data.simpleParsed.buttons & (1 << 8)) !== 0;\n        this.data.buttonPlus = (this.data.simpleParsed.buttons & (1 << 9)) !== 0;\n        this.data.buttonRStick = (this.data.simpleParsed.buttons & (1 << 10)) !== 0;\n        this.data.buttonLStick = (this.data.simpleParsed.buttons & (1 << 11)) !== 0;\n        this.data.buttonHome = (this.data.simpleParsed.buttons & (1 << 12)) !== 0;\n        this.data.buttonCapture = (this.data.simpleParsed.buttons & (1 << 13)) !== 0;\n        this.data.buttonC = (this.data.simpleParsed.buttons & (1 << 14)) !== 0;\n        this.data.buttonDown = (this.data.simpleParsed.buttons & (1 << 16)) !== 0;\n        this.data.buttonUp = (this.data.simpleParsed.buttons & (1 << 17)) !== 0;\n        this.data.buttonRight = (this.data.simpleParsed.buttons & (1 << 18)) !== 0;\n        this.data.buttonLeft = (this.data.simpleParsed.buttons & (1 << 19)) !== 0;\n        this.data.buttonSR_L = (this.data.simpleParsed.buttons & (1 << 20)) !== 0;\n        this.data.buttonSL_L = (this.data.simpleParsed.buttons & (1 << 21)) !== 0;\n        this.data.buttonL = (this.data.simpleParsed.buttons & (1 << 22)) !== 0;\n        this.data.buttonZL = (this.data.simpleParsed.buttons & (1 << 23)) !== 0;\n        this.data.leftStickY = (this.data.simpleParsed.leftStick >> 12) & 0xfff;\n        this.data.leftStickX = this.data.simpleParsed.leftStick & 0xfff;\n        this.data.rightStickY = (this.data.simpleParsed.rightStick >> 12) & 0xfff;\n        this.data.rightStickX = this.data.simpleParsed.rightStick & 0xfff;\n        this.data.mouseX = this.data.simpleParsed.mouseX;\n        this.data.mouseY = this.data.simpleParsed.mouseY;\n        this.data.mouseUnknown = this.data.simpleParsed.mouseUnknown;\n        this.data.mouseDistance = this.data.simpleParsed.mouseDistance;\n        this.data.magX = this.data.simpleParsed.magX;\n        this.data.magY = this.data.simpleParsed.magY;\n        this.data.magZ = this.data.simpleParsed.magZ;\n        this.data.batteryVoltage = this.data.simpleParsed.batteryVoltage;\n        this.data.batteryCurrent = this.data.simpleParsed.batteryCurrent / 100.0;\n        this.data.temperature = 25.0 + this.data.simpleParsed.temperature / 127.0;\n        this.data.accelX = this.data.simpleParsed.accelX / 4096.0;\n        this.data.accelY = this.data.simpleParsed.accelY / 4096.0;\n        this.data.accelZ = this.data.simpleParsed.accelZ / 4096.0;\n        this.data.gyroX = (this.data.simpleParsed.gyroX / 48000.0) * 360.0;\n        this.data.gyroY = (this.data.simpleParsed.gyroY / 48000.0) * 360.0;\n        this.data.gyroZ = (this.data.simpleParsed.gyroZ / 48000.0) * 360.0;\n        this.data.triggerL = this.data.simpleParsed.triggerL;\n        this.data.triggerR = this.data.simpleParsed.triggerR;\n        [this.data.rightStickX, this.data.rightStickY] = getStick(this.data.rightStickX, this.data.rightStickY);\n        [this.data.leftStickX, this.data.leftStickY] = getStick(this.data.leftStickX, this.data.leftStickY);\n        this.dispatchEvent(new CustomEvent('update', { detail: this.data }));\n    }\n}\n// default export requested by the user: Joycon2 class which wraps JoyCon2Device\nexport class Joycon2 extends EventTarget {\n    constructor() {\n        super();\n        this.dev = new JoyCon2Device();\n        // re-dispatch device events\n        this.dev.addEventListener('update', (e) => this.dispatchEvent(new CustomEvent('update', { detail: e.detail })));\n        this.dev.addEventListener('connected', (e) => this.dispatchEvent(new CustomEvent('connected')));\n        this.dev.addEventListener('disconnected', (e) => this.dispatchEvent(new CustomEvent('disconnected')));\n        this.dev.addEventListener('error', (e) => this.dispatchEvent(new CustomEvent('error', { detail: e.detail })));\n    }\n    async connect() {\n        return this.dev.connect();\n    }\n    disconnect() {\n        return this.dev.disconnect();\n    }\n    get gJoyCon2Data() {\n        return this.dev.data;\n    }\n    // Convenience boolean getters for common buttons so consumers can read\n    // `jc2.buttonUp` directly (useful for sketches / globals).\n    get buttonUp() {\n        return !!(this.dev && this.dev.data && this.dev.data.buttonUp);\n    }\n    get buttonDown() {\n        return !!(this.dev && this.dev.data && this.dev.data.buttonDown);\n    }\n    get buttonLeft() {\n        return !!(this.dev && this.dev.data && this.dev.data.buttonLeft);\n    }\n    get buttonRight() {\n        return !!(this.dev && this.dev.data && this.dev.data.buttonRight);\n    }\n    onUpdate(cb) {\n        this.addEventListener('update', () => cb(this.gJoyCon2Data));\n    }\n}\n// no default export: package exposes named exports only (Joycon2, JoyCon2Device, etc.)\n","import { Joycon2 } from \"../../dist/joycon2.js\";\n\n// Note: type definitions for JoyCon2 data live in the library. The example UI\n// no longer declares local interfaces and instead treats incoming data\n// generically for display purposes.\n\nconst jc2 = new Joycon2();\n\nconst bleButton = document.getElementById('ble-connect') as HTMLButtonElement | null;\nlet isConnected = false;\n\nfunction updateBleButton(connected: boolean) {\n  if (!bleButton) return;\n  isConnected = connected;\n  bleButton.textContent = connected ? 'Disconnect' : 'Connect';\n  // switch between Bootstrap primary (blue) and danger (red)\n  bleButton.classList.remove('btn-primary', 'btn-danger');\n  bleButton.classList.add(connected ? 'btn-danger' : 'btn-primary');\n  bleButton.disabled = false;\n}\n\nbleButton?.addEventListener('click', async () => {\n  if (!bleButton) return;\n  if (isConnected) {\n    // user requested disconnect\n    try {\n      jc2.disconnect();\n    } catch (err) {\n      console.error('disconnect error', err);\n    }\n    return;\n  }\n\n  // connect flow\n  bleButton.disabled = true;\n  try {\n    await jc2.connect();\n    // 'connected' event will update UI\n  } catch (err) {\n    console.error('connect error', err);\n    bleButton.disabled = false;\n  }\n});\n\njc2.addEventListener('connected', () => updateBleButton(true));\njc2.addEventListener('disconnected', () => updateBleButton(false));\njc2.addEventListener('error', (e: Event) => {\n  console.error('JoyCon2 error', (e as CustomEvent).detail);\n  updateBleButton(false);\n});\n\njc2.addEventListener('update', (e: Event) => {\n  const data = ((e as CustomEvent).detail) as any;\n\n  // reflect into the same UI as before\n  document.getElementById(\"raw-data\")!.textContent = Array.from(data.rawData as Uint8Array)\n    .map((b: number) => b.toString(16).padStart(2, \"0\"))\n    .join(\" \");\n\n  if (data.simpleParsed && typeof data.simpleParsed === 'object') {\n    Object.entries(data.simpleParsed).forEach(([key, val]) => {\n      const cell = document.getElementById('smpl-' + key) as HTMLTableCellElement | null;\n      if (cell) cell.textContent = String(val);\n    });\n  }\n\n  // library already provides normalized stick values (-1..1), so use them directly\n  drawStick('leftStickSim', data.leftStickX, data.leftStickY);\n  drawStick('rightStickSim', data.rightStickX, data.rightStickY);\n\n  Object.entries(data).forEach(([key, val]) => {\n    const cell = document.getElementById(key) as HTMLTableCellElement | null;\n    if (cell) cell.textContent = String(val);\n    if (val === true) updateButtonCell(key, true);\n    if (val === false) updateButtonCell(key, false);\n  });\n});\n\n\nfunction updateButtonCell(id: string, value: boolean) {\n  const el = document.getElementById(id);\n  if (!el) return;\n\n  el.textContent = value ? \"ON\" : \"OFF\";\n\n  if (value) {\n    el.classList.add(\"bg-primary\", \"text-white\"); // trueの時に色付け\n  } else {\n    el.classList.remove(\"bg-primary\", \"text-white\"); // falseなら元に戻す\n  }\n}\n\n// Helper functions for rendering are provided below. Stick normalization and parsing\n// are handled inside the library; the example only draws the provided normalized\n// values (-1..1).\n\nfunction drawStick(canvasId: string, x: number, y: number) {\n  const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n  if (!canvas) return;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return;\n\n  const size = canvas.width;\n  const center = size / 2;\n  const outerRadius = size / 2 - 5;\n  const dotRadius = 6;\n\n  // --- クリッピング処理 ---\n  const len = Math.sqrt(x * x + y * y);\n  if (len > 1) {\n    x = x / len;\n    y = y / len;\n  }\n\n  // クリア\n  ctx.clearRect(0, 0, size, size);\n\n  // 外円\n  ctx.beginPath();\n  ctx.arc(center, center, outerRadius, 0, Math.PI * 2);\n  ctx.strokeStyle = \"#888\";\n  ctx.lineWidth = 2;\n  ctx.stroke();\n\n  // 十字線\n  ctx.beginPath();\n  ctx.moveTo(center - outerRadius, center);\n  ctx.lineTo(center + outerRadius, center);\n  ctx.moveTo(center, center - outerRadius);\n  ctx.lineTo(center, center + outerRadius);\n  ctx.strokeStyle = \"#ccc\";\n  ctx.lineWidth = 1;\n  ctx.stroke();\n\n  // 値をキャンバス座標に変換\n  const px = center + x * (outerRadius - dotRadius);\n  const py = center - y * (outerRadius - dotRadius);\n\n  // 内側の点\n  ctx.beginPath();\n  ctx.arc(px, py, dotRadius, 0, Math.PI * 2);\n  ctx.fillStyle = \"#007bff\";\n  ctx.fill();\n}\n\n"],"names":["DEFAULT_DATA","SERVICE_UUID","CHARACTERISTICS_UUID","readUint24LE","dv","offset","b0","b1","centerX","minX","maxX","centerY","minY","maxY","normalizeStick","value","center","min","max","norm","clamp","round2","applyDeadzone","x","y","deadzone","magnitude","scale","normX","normY","getStick","rawX","rawY","JoyCon2Device","device","service","ev","err","cb","Joycon2","e","jc2","bleButton","isConnected","updateBleButton","connected","data","b","key","val","cell","drawStick","updateButtonCell","id","el","canvasId","canvas","ctx","size","outerRadius","dotRadius","len","px","py"],"mappings":"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"}